---
---
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title> Procatv </title>
    <link rel="stylesheet" href="/styles/global.css" />
</head>

<body>
    <div class="mainBox">
        <div class="logo">
            <p> Procatv! </p>
        </div>

        <div class="container"> <!-- Overall box -->
            <div class="box-row"> <!-- main box on left-->
                <div class="main box">
                    <div class="title">
                        <p>Welcome to my site!</p>
                    </div>
                    <!-- Flex container for profile and skills -->
                    <div class = "Overall">
                    <div class = "side">
                    <div class = "headshot">
  <img 
    id="headshot-img"
    src="https://website-6gp.pages.dev/docs/pixelHead.png"
    data-hover="/docs/headshot.JPG"
    alt="Catherine head-shot">
                        </div>
                    </div>
                    <div class="About">
                        <div class="profile">
                            <div class="profile-text">
                                <h3>Full-Stack Engineer & Distributed Systems Enthusiast</h3>
                                <p>
                                    I build high-performance back-end services (C++, Java) and polished front-end experiences (React).  
                                    Recently at IBM Research, I optimized Qiskit’s routing passes and shipped a multithreaded HTTP server from scratch.
                                </p>
                          </div>


                        </div>
                    </div> <!-- About --->
                    </div> <!-- Overall -->
                </div>
                <div class="blog">
                    <h2> Blog </h2>
                    <p> Inspiration - June 4, 2025</p>
                </div>

                <!-- Resume In Detail + images -->
                <!-- Need to add more detail-->

                <div class="projBox">
                    <div class="projects">
                        <h2> Projects</h2>
                    </div>

                    <div class="projContent">
                        <div class="project-list">
                        <p> USC Eats Delivery Robot </p>
                        <p> MasterChef Team Formation </p>
                        <p> Multithreaded Traffic-Throttling Web Server</p>
                        <p> Link-Layer & Network-Layer Server Network </p>
                        <p> Transport-Layer & Application-Layer Server Network </p>
                        <p>Lyrical Cloud </p>
                        <p>FitMatch</p>
                        <p>GeoWeather Portal</p>
                        </div>
                    </div>


                </div>

                <div class="expBox" id="expBox">
                    <div class="titlexp">
                        <h2> Experiences</h2>
                    </div>

                    <div class="exp">
                        <ul class="job-list">
                            <li>
                                <p>IBM Research</p>
                                <p>Qiskit Backend Software Developer</p>
                            </li>

                            <li>
                                <p>IBM Research</p>
                                <p>Qiskit Backend Software Developer</p>
                            </li>

                            <li>
                                <p>JPL</p>
                                <p>Project Support Office Software Developer</p>
                            </li>

                            <li>
                                <p>Quantum Foundry UCSB</p>
                                <p>Software Developer</p>
                            </li>

                            <li>
                                <p>Foley &amp; Lardner LLP</p>
                                <p>Administrative Assistant</p>
                            </li>
                        </ul>
                    </div>

                </div>
            </div> <!-- left side -->

            <!-- side container on right -->
            <div class="sideMenu">
                <div class="sidebox">
                    <h2 class="sideTitle">
                        Links! </h2>
                    <ul class="link-list">
                        <li><a href="https://www.linkedin.com/in/catherine-lozano/" target="_blank"
                                rel="noopener">LinkedIn</a>
                        </li>
                        <li><a href="https://github.com/Procatv" target="_blank" rel="noopener">GitHub</a></li>

                        <li><a href="https://www.youtube.com/@procatv4993" target="_blank" rel="noopener">YouTube</a>
                        </li>
                    </ul>
                </div>
              <div class="api1">
  <p>
    <span id="introText" style="font-family: 'double', sans-serif;">I’m </span>
    <span id="statusText" style="font-family: 'nice', monospace; font-size: 18px;">
      Loading..
    </span>
  </p>
</div>
        </div> <!-- container -->
        </div>
        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const pic = document.querySelector('#headshot-img');
                const original = pic.src;
                const hover = pic.dataset.hover;

                pic.addEventListener('mouseenter', () => pic.src = hover);
                pic.addEventListener('mouseleave', () => pic.src = original);
            });
        </script>
        <script>
        document.addEventListener('DOMContentLoaded', () => {
        const intro = document.getElementById('introText');
        const statusText = document.getElementById('statusText');
                    async function fetchStatus() {
            try {
            const res = await fetch("/status");
            const data = await res.json();

            // Always show “I’m” when the fetch succeeds
            intro.style.display = 'inline';

            if (data.status === "online") {
                statusText.textContent = "Online!";
                statusText.classList.add("status-online");
                statusText.classList.remove("status-offline");
            } else {
                statusText.textContent = "Offline!";
                statusText.classList.add("status-offline");
                statusText.classList.remove("status-online");
            }
            } catch (err) {
            // On error, hide the “I’m” span and show only the error message
            intro.style.display = 'none';
            statusText.textContent = "Error!";
            statusText.classList.remove("status-online", "status-offline");
            }
        }

                    fetchStatus();
                    setInterval(fetchStatus, 5000);
        });
</script>

</body>
</html>